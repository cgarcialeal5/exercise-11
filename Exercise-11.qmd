---
title: "Exercise 11"
author: "Cristina Garcia"
format: html
editor: visual
---

# Prelims:

Load the following packages for this analysis:

```{r}
#| eval: true
#| output: false
library(tidyverse)
library(dplyr)
library(broom)
library(naniar)
library(janitor)
library(MuMIn)
```

Load the data:

```{r}
d <- read_tsv("https://raw.githubusercontent.com/difiore/ada-datasets/main/Mammal_lifehistories_v2.txt")
```

To avoid issues with parenthesis, I also downloaded the package `{janitor}` to clean my data and remove parenthesis, spaces, and other characters from column names. The package appear in the **Prelims** section.

```{r}
d <- d %>%
  clean_names()
```

# Step 1: Replace -999 values with `NA`

The function `replace_with_na_all(),` from the `{naniar}` package to replace -999 values across all numerical columns with `NA`.

```{r}
d1 <- d %>%
 replace_with_na_all(condition = ~. == -999)
```

# Step 2: Remove variables "litter size" and "refs"

```{r}
d2 <- d1 %>%
  select("order", "family", "genus", "species", "mass_g", "gestation_mo", "newborn_g", "weaning_mo", "wean_mass_g", "afr_mo", "max_life_mo", "litters_year")
```

# Step 3: Log transform all numerical values

```{r}
d3 <- d2 %>%
  mutate(across(where(is.numeric),log))
```

# Step 4: Adding new variables

## Regressions

```{r}
m_gestation <- lm(data = d3, na.action=na.exclude, mass_g ~ gestation_mo)

m_weaning <- lm(data = d3, na.action=na.exclude, mass_g ~ weaning_mo)

m_AFR <- lm(data = d3, na.action=na.exclude, mass_g ~ afr_mo)

m_max.life <- lm(data = d3, na.action=na.exclude, mass_g ~ max_life_mo)

m_newborn <- lm(data = d3, na.action=na.exclude, mass_g ~ newborn_g)

m_wean.mass <- lm(data = d3, na.action=na.exclude, mass_g ~ wean_mass_g)

```

## Adding the new variables:

```{r}
d4 <- d3 %>%
  mutate(
    relGes = resid(m_gestation),
    relWean = resid(m_weaning),
    relAFR = resid(m_AFR),
    relLife = resid(m_max.life),
    relNewbornMass = resid(m_newborn),
    relWeanMass = resid(m_wean.mass)
  )
```

# Step 5: Plots

## Max Lifespan and Order

```{r}

p_maxlife <- ggplot(d4, aes(x = order, y = relLife)) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", color = "red") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Order", y = "Real Max Life")

print(p_maxlife)
```

If I were to answer the question literally, Perissodactyla has the individual with the highest residual life span. However, the boxplot shows that it is obviously an outlier. The next order with the highest maximum value for residual life span is the Sirenia order, but both the median and mean of the Sirenia are significantly lower than the maximum value displayed by the upper line of the plot. If we base our answer on these measurements, I would argue that the Cetacea order has a more constant higher residual life span, as its mean and median values are higher than others and the maximum value is only lower than Sirenia.

## Newborn Mass and Order

```{r}

p_NewbornMass <- ggplot(d4, aes(x = order, y = relNewbornMass))+
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", color = "red") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Order", y = "Real Newborn Mass (g)")
    )
print(p_NewbornMass)
```

The order with the highest residual newborn mass (g) is Carnivora. Interestingly, while two individuals in this order represent outliers, the order as a whole still displays the highest residual newborn mass (g) maximum values. Both the median and mode of this order are also higher than the rest of orders. I must add that both Proboscidea and Tubulidentata orders have similar median and mean values than Carnivora. However, those samples are quite small, thus I would not count that information as representative of the order. Furthermore, the upper line of the boxplot for Carnivora still shows much higher residual newborn mass (g) values than these two orders.

## Weaning Mass and Order

```{r}

p_WeaningMass <- ggplot(d4, aes(x = order, y = relWeanMass))+
  geom_boxplot() +
  stat_summary(fun = mean, geom = "point", color = "red") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Order", y = "Real Weaning Mass (g)")

print(p_WeaningMass)
```

Ignoring the outliers, the Carnivora order has the highest maximum value for the residual weaning mass. However, many orders (Hyracoidea, Lagomorpha, Pholidota, Proboscidea, Sirenia, Tubulidentata and Xenarthra) have higher mean and median values for residual weaning mass. Out of the orders with higher mean and median values, five have very small samples (Hyracoidea, Proboscidea, Sirenia, Tubulideentata, and Xenarthra). Thus, the order with the highest median and mean values for residual weaning mass that also has a larger sample size would be Pholidota.

# Step 6: Model and Model Selection

## Droping NA Values

```{r}
d5 <- d4 %>%
  drop_na("mass_g", "gestation_mo", "newborn_g", "weaning_mo", "wean_mass_g", "afr_mo", "max_life_mo", "litters_year")
```

## Model Selection and Questions for Max Life

### Model and Model Selection

```{r}
life_model <- lm(data = d5, na.action = na.fail, max_life_mo ~ gestation_mo + newborn_g + weaning_mo + wean_mass_g + litters_year + mass_g)

life_dredge <- dredge(life_model)

head(life_dredge)
```

The best model is the one that had the lowest AICc value at 256.8349 and a delta AICc value of 0.000. The formula for the best model would be: `lm(formula = max_life_mo ~ gestation_mo + litters_year + mass_g + weaning_mo + 1, data = d5, na.action = na.fail)`. The AICc and delta values were obtained from the tibble `life_dredge`, the formula was obtained using this code:

```{r}
life_best_model <- get.models(life_dredge, 1) [[1]]
summary(life_best_model)
```

### Models with AICc Values Lower Than Four

Only five models have delta AICc values lower than 4, and two more models have delta AICc values less than five but more than 4. In the set of five models with delta values under or equal to 4, the variables that appear repeatedly are age at weaning (mo), gestation time (mo), and litters per year. The variables mass (g), mass as newborn (g), and mass at weaning (g) were NOT present in all five models. This could be interpreted to mean that maximum life depends more on the age at weaning, gestation time, and the litters per year and that mass, in general and at different points in a lifespan (newborn and weaning), does not have a strong influence in the maximum lifespan of an individual. Although I must highlight that mass (g) was present in four of the five top models.

The formula to find these variables was:

```{r}
life_top_models <- subset(life_dredge, delta <= 4)
colSums(life_top_models[, 1:6] !=0) == nrow(life_top_models)
```

### Model Average and Plot

Lastly, to calculate the model-averaged coefficients and their CIs across the tope five models I used this code:

```{r}
life_avg <- model.avg(life_dredge, subset = delta <= 4)
summary(life_avg)
```

To plot this data, first I need to tidy the data in a way ggplot can read into a plot:

```{r}
life_tidy_avg <- as.data.frame(confint(life_avg, full = TRUE)) %>%
  mutate(
    term = rownames(.),
    estimate = coef(life_avg, full = TRUE)
  ) %>%
  filter(term != "(Intercept)")

print(life_tidy_avg)
```

Now that the data is in tidy form, I can plot:

```{r}
life_avg_plot <- ggplot(life_tidy_avg, 
                        aes(x = reorder(term, estimate), 
                            y = estimate)) +
  geom_point() +
  geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`)) +
  labs(x = "Predictor Variables", y = "Model-averaged Estimate")

print(life_avg_plot)
```

## Model Selection for Age of First Reproduction

### Model and Model Selection

```{r}
afr_model <- lm(data = d5, na.action = na.fail, afr_mo ~ gestation_mo + newborn_g + weaning_mo + wean_mass_g + litters_year + mass_g)

afr_dredge <- dredge(afr_model)

head(afr_dredge)
```

The best model is the one that had the lowest AICc value at 321.2266 and a delta AICc value of 0.000. The formula for the best model would be: `lm(formula = afr_mo ~ gestation_mo + litters_year + mass_g +      weaning_mo + 1, data = d5, na.action = na.fail)`. The AICc and delta values were obtained from the tibble `afr_dredge`, the formula was obtained using this code:

```{r}
afr_best_model <- get.models(afr_dredge, 1) [[1]]
summary(afr_best_model)
```

### Models with AICc Values Lower Than Four

Ten models have delta AICc values lower than 4, and two more models have delta AICc values less than five but more than 4. In the set of ten models with delta values under or equal to 4, the only variables that appear repeatedly are gestation time (mo) and litters per year. The rest of the variables were not present in all 10 models. However, I must point out that age at weaning (mo) was present in the first 7 models, including the best fit model, which could indicate that age at weaning has somewhat of an effect on age at first reproduction.

The formula to find these variables was:

```{r}
afr_top_models <- subset(afr_dredge, delta <= 4)
colSums(afr_top_models[, 1:6] !=0) == nrow(afr_top_models)
```

### Model Averages and Plot

```{r}
afr_avg <- model.avg(afr_dredge, subset = delta <= 4)
summary(afr_avg)
```

To tidy the data:

```{r}
afr_tidy_avg <- as.data.frame(confint(afr_avg, full = TRUE)) %>%
  mutate(
    term = rownames(.),
    estimate = coef(afr_avg, full = TRUE)
  ) %>%
  filter(term != "(Intercept)")
print(afr_tidy_avg)
```

Plot:

```{r}
afr_avg_plot <- ggplot(afr_tidy_avg, aes(
  x = reorder(term, estimate),
  y = estimate
)) +
  geom_point() +
  geom_errorbar(aes(
    ymin = `2.5 %`,
    ymax = `97.5 %`
  )) +
  labs(
    x = "Predictor Variables",
    y = "Model-average Estimate"
  )

print(afr_avg_plot)
```
